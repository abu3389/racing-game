    项目总算结束了，从刚开始的怕来不及到赶得上我才发现人的潜能是无限的。中途也遇到许多困难，但都一步一步能够把BUG调试出来。经历了二阶项目，调试代码的能力又提升了，遇到一些常见的BUG能够很快的找到问题并解决了，一些逻辑上的BUG也懂得用断点和打印的方式还有排除法的方式去进行调试，时间可能久一点，，但最终都能找到并解决。
    代码的速度也有所提升，思路也较为明确了。现在码代码不像以前想到什么就写什么了，这样写出来的框架适应性不好，容易在后面代码多的时候牵一发而动全身。现在已经离不开草稿纸了，在写代码的时候会先静下心来跟同学讨论或者自己把整个业务逻辑和思路在草稿纸上理一遍，分清楚业务运行时可能发生的异常情况和整个数据表的构建后，思路清晰了再去写代码，这样不仅效率高，有目的性而且写出来的框架适应性好。会减少很多的逻辑错误，也就减少了很多调试BUG的时间。
   在此次的项目中，遇到了一个致命的逻辑BUG，游戏终点的时候会一直发包，导致对手玩家一直重复收到服务器的比赛结束消息，会一直响应弹出结算页面，刚开始以为是由于定时器没有停掉一直循环导致的，但是怎么调试发现定时器似乎已经停止了不会再走，疑惑的时候向亮亮老师求助，老师教我用排除法，首先打印定时器，如果定时器创建的开始和结束的编号一致说明定时器已经停止，并没有重复开启。再用打印的方法排除是哪里重复打印了，就可以知道哪里重复调用了，一步步逆推回去。最后发现是两个函数互相调用了，导致了死循环，这时做个判断结束循环即可。这里我吸取了一个教训，以后写代码的时候不要贪图快而去想一步喝成，应该养成边写的时候边调试BUG的能力，要不然一下子写多了，如果此时的代码已经很多，万一出现逻辑错误，本来好好的却炸了，又要调试好久，服务器不报错的时候就会很难找。
   现在逐渐养成了从分析需求，拟定构架，构建数据表，项目功能编码一套系统性开发的好习惯，也养成了随时注释的习惯。不足的是布局还是偏弱，ws和Dao框架的构建还是不能手到擒来，机试的时候在这方面花费了挺长时间。不过我想，最初我也很怕第一阶段的本地存储，之前用起来很生疏，现在却能够熟练运用了。理论知识掌握的还是薄弱，所以在接下来的学习里注重培养服务器的通信和数据库的操作，相信到时候也会像本地存储一样越用越觉得好用。